@using SmartMenu.Models.Theme.Item
@model SmartMenu.Models.View.PublicCategoryItemViewModel
@{
    ItemCardTheme_Default themeObject;
    if(!string.IsNullOrEmpty(Model.ThemeJson))
    {
        themeObject = System.Text.Json.JsonSerializer.Deserialize<ItemCardTheme_Default>(Model.ThemeJson);
    }
    else
    {
        themeObject = new ItemCardTheme_Default();
    }

    var backgroundColorStyle = $"background-color:{themeObject.BackgroundColor};";
    var borderRadiosStyle = $"border-radius:{themeObject.BorderRadius}rem;";
    var borderStyle = $"border:{themeObject.BorderWidth}px solid {themeObject.BorderColor};";

    var titleColorStyle = $"color:{themeObject.TitleColor};";
    var titleFontSizeStyle = $"font-size:{themeObject.TitleFontSize}rem;";
    var titleFontStyle = string.IsNullOrEmpty(themeObject.TitleFont)? string.Empty : $"font-family:{themeObject.TitleFont}";

    var describtionColorStyle = $"color:{themeObject.DescribtionColor};";
    var describtionFontSizeStyle = $"font-size:{themeObject.DescribtionFontSize}rem;";
    var describtionFontStyle = string.IsNullOrEmpty(themeObject.DescribtionFont) ? string.Empty : $"font-family:{themeObject.DescribtionFont}";

    var priceBadgeBackgroundColorStyle = $"background-color:{themeObject.PriceBadgeBackgroundColor};";
    var priceBadgeColorStyle = $"color:{themeObject.PriceBadgeFontColor};";
    var priceBadgeFontSizeStyle = $"font-size:{themeObject.PriceBadgeFontSize}rem;";
    var priceBadgeFontStyle = string.IsNullOrEmpty(themeObject.PriceBadgeFont) ? string.Empty : $"font-family:{themeObject.PriceBadgeFont}";
    var priceBadgeFontWeightStyle = $"font-weight:{themeObject.PriceBadgeFontWeight}";
}

<div class="card w-100" style="@backgroundColorStyle @borderRadiosStyle @borderStyle box-shadow: 0 1px 3px 0 rgba(0,0,0,.1);">
    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <img src="@Model.ImageUrl" alt="@Model.DefaultTitle" class="card-img-top" style="object-fit:cover; height: 180px;">
    }
    <div class="card-body d-flex flex-column">
        <div class="d-flex justify-content-between align-items-start mb-1">
            <h5 class="card-title mb-0" style="@titleColorStyle @titleFontSizeStyle @titleFontStyle">@Model.DefaultTitle</h5>
            <span class="price-badge" style="@priceBadgeBackgroundColorStyle @priceBadgeColorStyle @priceBadgeFontSizeStyle @priceBadgeFontStyle @priceBadgeFontWeightStyle">@Model.Price.ToString("C")</span>
        </div>
        @if (!string.IsNullOrWhiteSpace(Model.Description))
        {
            <p class="item-desc mb-0" style="@describtionColorStyle @describtionFontSizeStyle @describtionFontStyle">@Model.Description</p>
        }
    </div>
</div>