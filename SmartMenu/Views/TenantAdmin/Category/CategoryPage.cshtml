@model SmartMenu.Models.Category.CategoryViewModel
@{
    ViewData["Title"] = Model.DefaultTitle;
}

<div class="container py-4">
    <div class="row align-items-center mb-4">
        <div class="col-auto">
            <a href="@Url.Action("MenuPage", "TenantAdmin", new { id = Model.MenuId })" class="btn btn-light rounded-circle shadow-sm" title="Back" style="width:48px; height:48px; display:flex; align-items:center; justify-content:center;">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M15 8a.5.5 0 0 1-.5.5H3.707l4.147 4.146a.5.5 0 0 1-.708.708l-5-5a.5.5 0 0 1 0-.708l5-5a.5.5 0 1 1 .708.708L3.707 7.5H14.5A.5.5 0 0 1 15 8z" />
                </svg>
            </a>
        </div>
        <div class="col">
            <h2 class="mb-0">@Model.DefaultTitle</h2>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col">
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="@Model.ImageUrl" alt="@Model.DefaultTitle" class="img-fluid rounded shadow-sm" style="max-height:220px; object-fit:cover;">
            }
        </div>
    </div>
    <div class="row mb-2">
        <div class="col">
            <h4>Items</h4>
        </div>
    </div>
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
        @foreach (var item in Model.Items)
        {
            <div class="col">
                <div class="card h-100 shadow-sm border-0 position-relative item-card" style="transition: box-shadow .2s;">
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@item.ImageUrl" class="card-img-top" alt="Item Image" style="object-fit:cover; height:180px;">
                    }
                    else
                    {
                        <div class="d-flex align-items-center justify-content-center" style="height:180px; background:#f8f9fa;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" fill="currentColor" class="text-muted" viewBox="0 0 16 16">
                                <rect width="16" height="16" rx="3" fill="#e9ecef" />
                                <text x="8" y="10" text-anchor="middle" fill="#adb5bd" font-size="8">No Image</text>
                            </svg>
                        </div>
                    }
                    <div class="card-body">
                        <h5 class="card-title mb-2">Titles:</h5>
                        <ul class="list-unstyled mb-0">
                            <li>
                                <span class="fw-bold">Title: </span>
                                <span>@item.DefaultTitle</span>
                            </li>
                            <li>
                                <span class="fw-bold">Price: </span>
                                <span>@item.Price.ToString()</span>
                            </li>
                        </ul>
                    </div>
                    <div class="item-actions position-absolute top-0 end-0 p-2" style="display:none; z-index:2;">
                        <button class="btn btn-sm btn-outline-primary me-1 edit-item-btn" data-id="@item.Id" title="Edit">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" height="20" width="17.5"><path fill="currentColor" d="M362.7 19.3L314.3 67.7 444.3 197.7l48.4-48.4c25-25 25-65.5 0-90.5L453.3 19.3c-25-25-65.5-25-90.5 0zm-71 71L58.6 323.5c-10.4 10.4-18 23.3-22.2 37.4L1 481.2C-1.5 489.7 .8 498.8 7 505s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L421.7 220.3 291.7 90.3z" /></svg>
                        </button>
                        <button class="btn btn-sm btn-outline-danger delete-item-btn" data-id="@item.Id" title="Delete">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" height="20" width="17.5"><path fill="currentColor" d="M135.2 17.7L128 32 32 32C14.3 32 0 46.3 0 64S14.3 96 32 96l384 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-96 0-7.2-14.3C307.4 6.8 296.3 0 284.2 0L163.8 0c-12.1 0-23.2 6.8-28.6 17.7zM416 128L32 128 53.2 467c1.6 25.3 22.6 45 47.9 45l245.8 0c25.3 0 46.3-19.7 47.9-45L416 128z" /></svg>
                        </button>
                    </div>
                </div>
            </div>
        }
        <!-- Add new Item card -->
        <div class="col">
            <div class="card h-100 shadow-sm border-0 text-center add-item-card" style="cursor:pointer; transition: box-shadow .2s;">
                <div class="d-flex align-items-center justify-content-center" style="height:180px; background:#f8f9fa;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" fill="var(--primary)" viewBox="0 0 24 24">
                        <rect x="11" y="4" width="2" height="16" rx="1" />
                        <rect x="4" y="11" width="16" height="2" rx="1" />
                    </svg>
                </div>
                <div class="card-body">
                    <h5 class="card-title text-primary">Add new Item</h5>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Show/hide item actions on hover
        $(document).on('mouseenter', '.item-card', function () {
            $(this).find('.item-actions').fadeIn(120);
        }).on('mouseleave', '.item-card', function () {
            $(this).find('.item-actions').fadeOut(120);
        });

        // Open modal to add new item
        $(document).on('click', '.add-item-card', function () {
            modalManager.show('@Url.Action("CreateItem", "TenantAdmin")' + '?categoryId=@Model.Id', 'modal-xl', 'Add New Item');
        });

        // Edit item button
        $(document).on('click', '.edit-item-btn', function (e) {
            e.stopPropagation();
            var id = $(this).data('id');
            modalManager.show('@Url.Action("EditItem", "TenantAdmin")' + '?id=' + id, 'modal-xl', 'Edit Item');
        });

        // Delete item button
        $(document).on('click', '.delete-item-btn', function (e) {
            e.stopPropagation();
            var id = $(this).data('id');
            Swal.fire({
                title: 'Are you sure?',
                text: "This will permanently delete the item.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteItem", "TenantAdmin")',
                        type: 'POST',
                        data: { id: id, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                        success: function (res) {
                            if (res.success) {
                                location.reload();
                            } else {
                                Swal.fire('Error', res.message || 'Failed to delete item.', 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Error', 'Failed to delete item.', 'error');
                        }
                    });
                }
            });
        });

        // Reload page when modal closes (after create/edit)
        $('#dynamicModal').on('hidden.bs.modal', function () {
            location.reload();
        });
    </script>
    @Html.AntiForgeryToken()
}